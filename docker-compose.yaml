services:
  backend-admin:
    build: 
      dockerfile: Dockerfile.admin
    container_name: backend-admin
    env_file:
      - .env
    restart: always
    command: gunicorn main:app -k uvicorn.workers.UvicornWorker --bind 0.0.0.0
    ports:
      - 8000:8000
  backend-tasks:
    build: 
      dockerfile: Dockerfile.tasks
    container_name: backend-tasks
    env_file:
      - .env
    restart: always
    command: gunicorn main:app -k uvicorn.workers.UvicornWorker --bind 0.0.0.0
    ports:
      - 8001:8000
  backend-user:
    build: 
      dockerfile: Dockerfile.user
    container_name: backend-user
    env_file:
      - .env
    restart: always
    command: gunicorn main:app -k uvicorn.workers.UvicornWorker --bind 0.0.0.0
    ports:
      - 8002:8000      
  libs:
    build: 
      dockerfile: Dockerfile.libs
    container_name: libs
    env_file:
      - .env
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
  redis:
    image: redis:alpine
    container_name: redis
  db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 3s